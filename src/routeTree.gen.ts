/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserRouteImport } from './routes/user/route'
import { Route as StoreRouteImport } from './routes/store/route'
import { Route as SellerRouteImport } from './routes/seller/route'
import { Route as ProductRouteImport } from './routes/product/route'
import { Route as PaymentRouteImport } from './routes/payment/route'
import { Route as CheckoutRouteImport } from './routes/checkout/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as CartIndexImport } from './routes/cart/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as UserSavedIndexImport } from './routes/user/saved/index'
import { Route as UserReviewIndexImport } from './routes/user/review/index'
import { Route as UserRecentIndexImport } from './routes/user/recent/index'
import { Route as UserOrdersIndexImport } from './routes/user/orders/index'
import { Route as UserNotificationsIndexImport } from './routes/user/notifications/index'
import { Route as UserHelpIndexImport } from './routes/user/help/index'
import { Route as UserFollowersIndexImport } from './routes/user/followers/index'
import { Route as UserFinanceIndexImport } from './routes/user/finance/index'
import { Route as UserAnalyticsIndexImport } from './routes/user/analytics/index'
import { Route as UserAccountIndexImport } from './routes/user/account/index'
import { Route as StoreSellerIdIndexImport } from './routes/store/$sellerId/index'
import { Route as SellerProductsIndexImport } from './routes/seller/products/index'
import { Route as SellerFollowersIndexImport } from './routes/seller/followers/index'
import { Route as SellerFinanceIndexImport } from './routes/seller/finance/index'
import { Route as SellerAnalyticsIndexImport } from './routes/seller/analytics/index'
import { Route as ProductSlugIndexImport } from './routes/product/$slug/index'
import { Route as PaymentVerifyIndexImport } from './routes/payment/verify/index'
import { Route as CheckoutOrderNumberIndexImport } from './routes/checkout/$orderNumber/index'
import { Route as AuthVerifyOtpIndexImport } from './routes/auth/verify-otp/index'
import { Route as AuthRegisterIndexImport } from './routes/auth/register/index'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'
import { Route as UserOrdersIdIndexImport } from './routes/user/orders/$id/index'
import { Route as UserNotificationsIdIndexImport } from './routes/user/notifications/$id/index'
import { Route as UserAccountEditIndexImport } from './routes/user/account/edit/index'
import { Route as StoreSellerIdProductsIndexImport } from './routes/store/$sellerId/products/index'
import { Route as SellerProductsCreateIndexImport } from './routes/seller/products/create/index'
import { Route as ProductSlugReviewsIndexImport } from './routes/product/$slug/reviews/index'
import { Route as SellerProductsSlugPromoteIndexImport } from './routes/seller/products/$slug/promote/index'
import { Route as SellerProductsSlugEditIndexImport } from './routes/seller/products/$slug/edit/index'
import { Route as SellerProductsSlugAnalyticsIndexImport } from './routes/seller/products/$slug/analytics/index'
import { Route as UserOrdersProductSlugReviewIndexImport } from './routes/user/orders/product/$slug/review/index'
import { Route as UserOrdersLogisticsIdReviewIndexImport } from './routes/user/orders/logistics/$id/review/index'

// Create/Update Routes

const UserRouteRoute = UserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const StoreRouteRoute = StoreRouteImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => rootRoute,
} as any)

const SellerRouteRoute = SellerRouteImport.update({
  id: '/seller',
  path: '/seller',
  getParentRoute: () => rootRoute,
} as any)

const ProductRouteRoute = ProductRouteImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => rootRoute,
} as any)

const PaymentRouteRoute = PaymentRouteImport.update({
  id: '/payment',
  path: '/payment',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutRouteRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const CartIndexRoute = CartIndexImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const UserSavedIndexRoute = UserSavedIndexImport.update({
  id: '/saved/',
  path: '/saved/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserReviewIndexRoute = UserReviewIndexImport.update({
  id: '/review/',
  path: '/review/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserRecentIndexRoute = UserRecentIndexImport.update({
  id: '/recent/',
  path: '/recent/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserOrdersIndexRoute = UserOrdersIndexImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserNotificationsIndexRoute = UserNotificationsIndexImport.update({
  id: '/notifications/',
  path: '/notifications/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserHelpIndexRoute = UserHelpIndexImport.update({
  id: '/help/',
  path: '/help/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserFollowersIndexRoute = UserFollowersIndexImport.update({
  id: '/followers/',
  path: '/followers/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserFinanceIndexRoute = UserFinanceIndexImport.update({
  id: '/finance/',
  path: '/finance/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserAnalyticsIndexRoute = UserAnalyticsIndexImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserAccountIndexRoute = UserAccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => UserRouteRoute,
} as any)

const StoreSellerIdIndexRoute = StoreSellerIdIndexImport.update({
  id: '/$sellerId/',
  path: '/$sellerId/',
  getParentRoute: () => StoreRouteRoute,
} as any)

const SellerProductsIndexRoute = SellerProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => SellerRouteRoute,
} as any)

const SellerFollowersIndexRoute = SellerFollowersIndexImport.update({
  id: '/followers/',
  path: '/followers/',
  getParentRoute: () => SellerRouteRoute,
} as any)

const SellerFinanceIndexRoute = SellerFinanceIndexImport.update({
  id: '/finance/',
  path: '/finance/',
  getParentRoute: () => SellerRouteRoute,
} as any)

const SellerAnalyticsIndexRoute = SellerAnalyticsIndexImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => SellerRouteRoute,
} as any)

const ProductSlugIndexRoute = ProductSlugIndexImport.update({
  id: '/$slug/',
  path: '/$slug/',
  getParentRoute: () => ProductRouteRoute,
} as any)

const PaymentVerifyIndexRoute = PaymentVerifyIndexImport.update({
  id: '/verify/',
  path: '/verify/',
  getParentRoute: () => PaymentRouteRoute,
} as any)

const CheckoutOrderNumberIndexRoute = CheckoutOrderNumberIndexImport.update({
  id: '/$orderNumber/',
  path: '/$orderNumber/',
  getParentRoute: () => CheckoutRouteRoute,
} as any)

const AuthVerifyOtpIndexRoute = AuthVerifyOtpIndexImport.update({
  id: '/verify-otp/',
  path: '/verify-otp/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const UserOrdersIdIndexRoute = UserOrdersIdIndexImport.update({
  id: '/orders/$id/',
  path: '/orders/$id/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserNotificationsIdIndexRoute = UserNotificationsIdIndexImport.update({
  id: '/notifications/$id/',
  path: '/notifications/$id/',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserAccountEditIndexRoute = UserAccountEditIndexImport.update({
  id: '/account/edit/',
  path: '/account/edit/',
  getParentRoute: () => UserRouteRoute,
} as any)

const StoreSellerIdProductsIndexRoute = StoreSellerIdProductsIndexImport.update(
  {
    id: '/$sellerId/products/',
    path: '/$sellerId/products/',
    getParentRoute: () => StoreRouteRoute,
  } as any,
)

const SellerProductsCreateIndexRoute = SellerProductsCreateIndexImport.update({
  id: '/products/create/',
  path: '/products/create/',
  getParentRoute: () => SellerRouteRoute,
} as any)

const ProductSlugReviewsIndexRoute = ProductSlugReviewsIndexImport.update({
  id: '/$slug/reviews/',
  path: '/$slug/reviews/',
  getParentRoute: () => ProductRouteRoute,
} as any)

const SellerProductsSlugPromoteIndexRoute =
  SellerProductsSlugPromoteIndexImport.update({
    id: '/products/$slug/promote/',
    path: '/products/$slug/promote/',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerProductsSlugEditIndexRoute =
  SellerProductsSlugEditIndexImport.update({
    id: '/products/$slug/edit/',
    path: '/products/$slug/edit/',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerProductsSlugAnalyticsIndexRoute =
  SellerProductsSlugAnalyticsIndexImport.update({
    id: '/products/$slug/analytics/',
    path: '/products/$slug/analytics/',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const UserOrdersProductSlugReviewIndexRoute =
  UserOrdersProductSlugReviewIndexImport.update({
    id: '/orders/product/$slug/review/',
    path: '/orders/product/$slug/review/',
    getParentRoute: () => UserRouteRoute,
  } as any)

const UserOrdersLogisticsIdReviewIndexRoute =
  UserOrdersLogisticsIdReviewIndexImport.update({
    id: '/orders/logistics/$id/review/',
    path: '/orders/logistics/$id/review/',
    getParentRoute: () => UserRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/payment': {
      id: '/payment'
      path: '/payment'
      fullPath: '/payment'
      preLoaderRoute: typeof PaymentRouteImport
      parentRoute: typeof rootRoute
    }
    '/product': {
      id: '/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductRouteImport
      parentRoute: typeof rootRoute
    }
    '/seller': {
      id: '/seller'
      path: '/seller'
      fullPath: '/seller'
      preLoaderRoute: typeof SellerRouteImport
      parentRoute: typeof rootRoute
    }
    '/store': {
      id: '/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof StoreRouteImport
      parentRoute: typeof rootRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserRouteImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/verify-otp/': {
      id: '/auth/verify-otp/'
      path: '/verify-otp'
      fullPath: '/auth/verify-otp'
      preLoaderRoute: typeof AuthVerifyOtpIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/checkout/$orderNumber/': {
      id: '/checkout/$orderNumber/'
      path: '/$orderNumber'
      fullPath: '/checkout/$orderNumber'
      preLoaderRoute: typeof CheckoutOrderNumberIndexImport
      parentRoute: typeof CheckoutRouteImport
    }
    '/payment/verify/': {
      id: '/payment/verify/'
      path: '/verify'
      fullPath: '/payment/verify'
      preLoaderRoute: typeof PaymentVerifyIndexImport
      parentRoute: typeof PaymentRouteImport
    }
    '/product/$slug/': {
      id: '/product/$slug/'
      path: '/$slug'
      fullPath: '/product/$slug'
      preLoaderRoute: typeof ProductSlugIndexImport
      parentRoute: typeof ProductRouteImport
    }
    '/seller/analytics/': {
      id: '/seller/analytics/'
      path: '/analytics'
      fullPath: '/seller/analytics'
      preLoaderRoute: typeof SellerAnalyticsIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/finance/': {
      id: '/seller/finance/'
      path: '/finance'
      fullPath: '/seller/finance'
      preLoaderRoute: typeof SellerFinanceIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/followers/': {
      id: '/seller/followers/'
      path: '/followers'
      fullPath: '/seller/followers'
      preLoaderRoute: typeof SellerFollowersIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/products/': {
      id: '/seller/products/'
      path: '/products'
      fullPath: '/seller/products'
      preLoaderRoute: typeof SellerProductsIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/store/$sellerId/': {
      id: '/store/$sellerId/'
      path: '/$sellerId'
      fullPath: '/store/$sellerId'
      preLoaderRoute: typeof StoreSellerIdIndexImport
      parentRoute: typeof StoreRouteImport
    }
    '/user/account/': {
      id: '/user/account/'
      path: '/account'
      fullPath: '/user/account'
      preLoaderRoute: typeof UserAccountIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/analytics/': {
      id: '/user/analytics/'
      path: '/analytics'
      fullPath: '/user/analytics'
      preLoaderRoute: typeof UserAnalyticsIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/finance/': {
      id: '/user/finance/'
      path: '/finance'
      fullPath: '/user/finance'
      preLoaderRoute: typeof UserFinanceIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/followers/': {
      id: '/user/followers/'
      path: '/followers'
      fullPath: '/user/followers'
      preLoaderRoute: typeof UserFollowersIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/help/': {
      id: '/user/help/'
      path: '/help'
      fullPath: '/user/help'
      preLoaderRoute: typeof UserHelpIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/notifications/': {
      id: '/user/notifications/'
      path: '/notifications'
      fullPath: '/user/notifications'
      preLoaderRoute: typeof UserNotificationsIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/orders/': {
      id: '/user/orders/'
      path: '/orders'
      fullPath: '/user/orders'
      preLoaderRoute: typeof UserOrdersIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/recent/': {
      id: '/user/recent/'
      path: '/recent'
      fullPath: '/user/recent'
      preLoaderRoute: typeof UserRecentIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/review/': {
      id: '/user/review/'
      path: '/review'
      fullPath: '/user/review'
      preLoaderRoute: typeof UserReviewIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/saved/': {
      id: '/user/saved/'
      path: '/saved'
      fullPath: '/user/saved'
      preLoaderRoute: typeof UserSavedIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/product/$slug/reviews/': {
      id: '/product/$slug/reviews/'
      path: '/$slug/reviews'
      fullPath: '/product/$slug/reviews'
      preLoaderRoute: typeof ProductSlugReviewsIndexImport
      parentRoute: typeof ProductRouteImport
    }
    '/seller/products/create/': {
      id: '/seller/products/create/'
      path: '/products/create'
      fullPath: '/seller/products/create'
      preLoaderRoute: typeof SellerProductsCreateIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/store/$sellerId/products/': {
      id: '/store/$sellerId/products/'
      path: '/$sellerId/products'
      fullPath: '/store/$sellerId/products'
      preLoaderRoute: typeof StoreSellerIdProductsIndexImport
      parentRoute: typeof StoreRouteImport
    }
    '/user/account/edit/': {
      id: '/user/account/edit/'
      path: '/account/edit'
      fullPath: '/user/account/edit'
      preLoaderRoute: typeof UserAccountEditIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/notifications/$id/': {
      id: '/user/notifications/$id/'
      path: '/notifications/$id'
      fullPath: '/user/notifications/$id'
      preLoaderRoute: typeof UserNotificationsIdIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/orders/$id/': {
      id: '/user/orders/$id/'
      path: '/orders/$id'
      fullPath: '/user/orders/$id'
      preLoaderRoute: typeof UserOrdersIdIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/seller/products/$slug/analytics/': {
      id: '/seller/products/$slug/analytics/'
      path: '/products/$slug/analytics'
      fullPath: '/seller/products/$slug/analytics'
      preLoaderRoute: typeof SellerProductsSlugAnalyticsIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/products/$slug/edit/': {
      id: '/seller/products/$slug/edit/'
      path: '/products/$slug/edit'
      fullPath: '/seller/products/$slug/edit'
      preLoaderRoute: typeof SellerProductsSlugEditIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/products/$slug/promote/': {
      id: '/seller/products/$slug/promote/'
      path: '/products/$slug/promote'
      fullPath: '/seller/products/$slug/promote'
      preLoaderRoute: typeof SellerProductsSlugPromoteIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/user/orders/logistics/$id/review/': {
      id: '/user/orders/logistics/$id/review/'
      path: '/orders/logistics/$id/review'
      fullPath: '/user/orders/logistics/$id/review'
      preLoaderRoute: typeof UserOrdersLogisticsIdReviewIndexImport
      parentRoute: typeof UserRouteImport
    }
    '/user/orders/product/$slug/review/': {
      id: '/user/orders/product/$slug/review/'
      path: '/orders/product/$slug/review'
      fullPath: '/user/orders/product/$slug/review'
      preLoaderRoute: typeof UserOrdersProductSlugReviewIndexImport
      parentRoute: typeof UserRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  AuthVerifyOtpIndexRoute: typeof AuthVerifyOtpIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  AuthVerifyOtpIndexRoute: AuthVerifyOtpIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface CheckoutRouteRouteChildren {
  CheckoutOrderNumberIndexRoute: typeof CheckoutOrderNumberIndexRoute
}

const CheckoutRouteRouteChildren: CheckoutRouteRouteChildren = {
  CheckoutOrderNumberIndexRoute: CheckoutOrderNumberIndexRoute,
}

const CheckoutRouteRouteWithChildren = CheckoutRouteRoute._addFileChildren(
  CheckoutRouteRouteChildren,
)

interface PaymentRouteRouteChildren {
  PaymentVerifyIndexRoute: typeof PaymentVerifyIndexRoute
}

const PaymentRouteRouteChildren: PaymentRouteRouteChildren = {
  PaymentVerifyIndexRoute: PaymentVerifyIndexRoute,
}

const PaymentRouteRouteWithChildren = PaymentRouteRoute._addFileChildren(
  PaymentRouteRouteChildren,
)

interface ProductRouteRouteChildren {
  ProductSlugIndexRoute: typeof ProductSlugIndexRoute
  ProductSlugReviewsIndexRoute: typeof ProductSlugReviewsIndexRoute
}

const ProductRouteRouteChildren: ProductRouteRouteChildren = {
  ProductSlugIndexRoute: ProductSlugIndexRoute,
  ProductSlugReviewsIndexRoute: ProductSlugReviewsIndexRoute,
}

const ProductRouteRouteWithChildren = ProductRouteRoute._addFileChildren(
  ProductRouteRouteChildren,
)

interface SellerRouteRouteChildren {
  SellerAnalyticsIndexRoute: typeof SellerAnalyticsIndexRoute
  SellerFinanceIndexRoute: typeof SellerFinanceIndexRoute
  SellerFollowersIndexRoute: typeof SellerFollowersIndexRoute
  SellerProductsIndexRoute: typeof SellerProductsIndexRoute
  SellerProductsCreateIndexRoute: typeof SellerProductsCreateIndexRoute
  SellerProductsSlugAnalyticsIndexRoute: typeof SellerProductsSlugAnalyticsIndexRoute
  SellerProductsSlugEditIndexRoute: typeof SellerProductsSlugEditIndexRoute
  SellerProductsSlugPromoteIndexRoute: typeof SellerProductsSlugPromoteIndexRoute
}

const SellerRouteRouteChildren: SellerRouteRouteChildren = {
  SellerAnalyticsIndexRoute: SellerAnalyticsIndexRoute,
  SellerFinanceIndexRoute: SellerFinanceIndexRoute,
  SellerFollowersIndexRoute: SellerFollowersIndexRoute,
  SellerProductsIndexRoute: SellerProductsIndexRoute,
  SellerProductsCreateIndexRoute: SellerProductsCreateIndexRoute,
  SellerProductsSlugAnalyticsIndexRoute: SellerProductsSlugAnalyticsIndexRoute,
  SellerProductsSlugEditIndexRoute: SellerProductsSlugEditIndexRoute,
  SellerProductsSlugPromoteIndexRoute: SellerProductsSlugPromoteIndexRoute,
}

const SellerRouteRouteWithChildren = SellerRouteRoute._addFileChildren(
  SellerRouteRouteChildren,
)

interface StoreRouteRouteChildren {
  StoreSellerIdIndexRoute: typeof StoreSellerIdIndexRoute
  StoreSellerIdProductsIndexRoute: typeof StoreSellerIdProductsIndexRoute
}

const StoreRouteRouteChildren: StoreRouteRouteChildren = {
  StoreSellerIdIndexRoute: StoreSellerIdIndexRoute,
  StoreSellerIdProductsIndexRoute: StoreSellerIdProductsIndexRoute,
}

const StoreRouteRouteWithChildren = StoreRouteRoute._addFileChildren(
  StoreRouteRouteChildren,
)

interface UserRouteRouteChildren {
  UserAccountIndexRoute: typeof UserAccountIndexRoute
  UserAnalyticsIndexRoute: typeof UserAnalyticsIndexRoute
  UserFinanceIndexRoute: typeof UserFinanceIndexRoute
  UserFollowersIndexRoute: typeof UserFollowersIndexRoute
  UserHelpIndexRoute: typeof UserHelpIndexRoute
  UserNotificationsIndexRoute: typeof UserNotificationsIndexRoute
  UserOrdersIndexRoute: typeof UserOrdersIndexRoute
  UserRecentIndexRoute: typeof UserRecentIndexRoute
  UserReviewIndexRoute: typeof UserReviewIndexRoute
  UserSavedIndexRoute: typeof UserSavedIndexRoute
  UserAccountEditIndexRoute: typeof UserAccountEditIndexRoute
  UserNotificationsIdIndexRoute: typeof UserNotificationsIdIndexRoute
  UserOrdersIdIndexRoute: typeof UserOrdersIdIndexRoute
  UserOrdersLogisticsIdReviewIndexRoute: typeof UserOrdersLogisticsIdReviewIndexRoute
  UserOrdersProductSlugReviewIndexRoute: typeof UserOrdersProductSlugReviewIndexRoute
}

const UserRouteRouteChildren: UserRouteRouteChildren = {
  UserAccountIndexRoute: UserAccountIndexRoute,
  UserAnalyticsIndexRoute: UserAnalyticsIndexRoute,
  UserFinanceIndexRoute: UserFinanceIndexRoute,
  UserFollowersIndexRoute: UserFollowersIndexRoute,
  UserHelpIndexRoute: UserHelpIndexRoute,
  UserNotificationsIndexRoute: UserNotificationsIndexRoute,
  UserOrdersIndexRoute: UserOrdersIndexRoute,
  UserRecentIndexRoute: UserRecentIndexRoute,
  UserReviewIndexRoute: UserReviewIndexRoute,
  UserSavedIndexRoute: UserSavedIndexRoute,
  UserAccountEditIndexRoute: UserAccountEditIndexRoute,
  UserNotificationsIdIndexRoute: UserNotificationsIdIndexRoute,
  UserOrdersIdIndexRoute: UserOrdersIdIndexRoute,
  UserOrdersLogisticsIdReviewIndexRoute: UserOrdersLogisticsIdReviewIndexRoute,
  UserOrdersProductSlugReviewIndexRoute: UserOrdersProductSlugReviewIndexRoute,
}

const UserRouteRouteWithChildren = UserRouteRoute._addFileChildren(
  UserRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/checkout': typeof CheckoutRouteRouteWithChildren
  '/payment': typeof PaymentRouteRouteWithChildren
  '/product': typeof ProductRouteRouteWithChildren
  '/seller': typeof SellerRouteRouteWithChildren
  '/store': typeof StoreRouteRouteWithChildren
  '/user': typeof UserRouteRouteWithChildren
  '/about': typeof AboutIndexRoute
  '/cart': typeof CartIndexRoute
  '/products': typeof ProductsIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/verify-otp': typeof AuthVerifyOtpIndexRoute
  '/checkout/$orderNumber': typeof CheckoutOrderNumberIndexRoute
  '/payment/verify': typeof PaymentVerifyIndexRoute
  '/product/$slug': typeof ProductSlugIndexRoute
  '/seller/analytics': typeof SellerAnalyticsIndexRoute
  '/seller/finance': typeof SellerFinanceIndexRoute
  '/seller/followers': typeof SellerFollowersIndexRoute
  '/seller/products': typeof SellerProductsIndexRoute
  '/store/$sellerId': typeof StoreSellerIdIndexRoute
  '/user/account': typeof UserAccountIndexRoute
  '/user/analytics': typeof UserAnalyticsIndexRoute
  '/user/finance': typeof UserFinanceIndexRoute
  '/user/followers': typeof UserFollowersIndexRoute
  '/user/help': typeof UserHelpIndexRoute
  '/user/notifications': typeof UserNotificationsIndexRoute
  '/user/orders': typeof UserOrdersIndexRoute
  '/user/recent': typeof UserRecentIndexRoute
  '/user/review': typeof UserReviewIndexRoute
  '/user/saved': typeof UserSavedIndexRoute
  '/product/$slug/reviews': typeof ProductSlugReviewsIndexRoute
  '/seller/products/create': typeof SellerProductsCreateIndexRoute
  '/store/$sellerId/products': typeof StoreSellerIdProductsIndexRoute
  '/user/account/edit': typeof UserAccountEditIndexRoute
  '/user/notifications/$id': typeof UserNotificationsIdIndexRoute
  '/user/orders/$id': typeof UserOrdersIdIndexRoute
  '/seller/products/$slug/analytics': typeof SellerProductsSlugAnalyticsIndexRoute
  '/seller/products/$slug/edit': typeof SellerProductsSlugEditIndexRoute
  '/seller/products/$slug/promote': typeof SellerProductsSlugPromoteIndexRoute
  '/user/orders/logistics/$id/review': typeof UserOrdersLogisticsIdReviewIndexRoute
  '/user/orders/product/$slug/review': typeof UserOrdersProductSlugReviewIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/checkout': typeof CheckoutRouteRouteWithChildren
  '/payment': typeof PaymentRouteRouteWithChildren
  '/product': typeof ProductRouteRouteWithChildren
  '/seller': typeof SellerRouteRouteWithChildren
  '/store': typeof StoreRouteRouteWithChildren
  '/user': typeof UserRouteRouteWithChildren
  '/about': typeof AboutIndexRoute
  '/cart': typeof CartIndexRoute
  '/products': typeof ProductsIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/verify-otp': typeof AuthVerifyOtpIndexRoute
  '/checkout/$orderNumber': typeof CheckoutOrderNumberIndexRoute
  '/payment/verify': typeof PaymentVerifyIndexRoute
  '/product/$slug': typeof ProductSlugIndexRoute
  '/seller/analytics': typeof SellerAnalyticsIndexRoute
  '/seller/finance': typeof SellerFinanceIndexRoute
  '/seller/followers': typeof SellerFollowersIndexRoute
  '/seller/products': typeof SellerProductsIndexRoute
  '/store/$sellerId': typeof StoreSellerIdIndexRoute
  '/user/account': typeof UserAccountIndexRoute
  '/user/analytics': typeof UserAnalyticsIndexRoute
  '/user/finance': typeof UserFinanceIndexRoute
  '/user/followers': typeof UserFollowersIndexRoute
  '/user/help': typeof UserHelpIndexRoute
  '/user/notifications': typeof UserNotificationsIndexRoute
  '/user/orders': typeof UserOrdersIndexRoute
  '/user/recent': typeof UserRecentIndexRoute
  '/user/review': typeof UserReviewIndexRoute
  '/user/saved': typeof UserSavedIndexRoute
  '/product/$slug/reviews': typeof ProductSlugReviewsIndexRoute
  '/seller/products/create': typeof SellerProductsCreateIndexRoute
  '/store/$sellerId/products': typeof StoreSellerIdProductsIndexRoute
  '/user/account/edit': typeof UserAccountEditIndexRoute
  '/user/notifications/$id': typeof UserNotificationsIdIndexRoute
  '/user/orders/$id': typeof UserOrdersIdIndexRoute
  '/seller/products/$slug/analytics': typeof SellerProductsSlugAnalyticsIndexRoute
  '/seller/products/$slug/edit': typeof SellerProductsSlugEditIndexRoute
  '/seller/products/$slug/promote': typeof SellerProductsSlugPromoteIndexRoute
  '/user/orders/logistics/$id/review': typeof UserOrdersLogisticsIdReviewIndexRoute
  '/user/orders/product/$slug/review': typeof UserOrdersProductSlugReviewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/checkout': typeof CheckoutRouteRouteWithChildren
  '/payment': typeof PaymentRouteRouteWithChildren
  '/product': typeof ProductRouteRouteWithChildren
  '/seller': typeof SellerRouteRouteWithChildren
  '/store': typeof StoreRouteRouteWithChildren
  '/user': typeof UserRouteRouteWithChildren
  '/about/': typeof AboutIndexRoute
  '/cart/': typeof CartIndexRoute
  '/products/': typeof ProductsIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/auth/verify-otp/': typeof AuthVerifyOtpIndexRoute
  '/checkout/$orderNumber/': typeof CheckoutOrderNumberIndexRoute
  '/payment/verify/': typeof PaymentVerifyIndexRoute
  '/product/$slug/': typeof ProductSlugIndexRoute
  '/seller/analytics/': typeof SellerAnalyticsIndexRoute
  '/seller/finance/': typeof SellerFinanceIndexRoute
  '/seller/followers/': typeof SellerFollowersIndexRoute
  '/seller/products/': typeof SellerProductsIndexRoute
  '/store/$sellerId/': typeof StoreSellerIdIndexRoute
  '/user/account/': typeof UserAccountIndexRoute
  '/user/analytics/': typeof UserAnalyticsIndexRoute
  '/user/finance/': typeof UserFinanceIndexRoute
  '/user/followers/': typeof UserFollowersIndexRoute
  '/user/help/': typeof UserHelpIndexRoute
  '/user/notifications/': typeof UserNotificationsIndexRoute
  '/user/orders/': typeof UserOrdersIndexRoute
  '/user/recent/': typeof UserRecentIndexRoute
  '/user/review/': typeof UserReviewIndexRoute
  '/user/saved/': typeof UserSavedIndexRoute
  '/product/$slug/reviews/': typeof ProductSlugReviewsIndexRoute
  '/seller/products/create/': typeof SellerProductsCreateIndexRoute
  '/store/$sellerId/products/': typeof StoreSellerIdProductsIndexRoute
  '/user/account/edit/': typeof UserAccountEditIndexRoute
  '/user/notifications/$id/': typeof UserNotificationsIdIndexRoute
  '/user/orders/$id/': typeof UserOrdersIdIndexRoute
  '/seller/products/$slug/analytics/': typeof SellerProductsSlugAnalyticsIndexRoute
  '/seller/products/$slug/edit/': typeof SellerProductsSlugEditIndexRoute
  '/seller/products/$slug/promote/': typeof SellerProductsSlugPromoteIndexRoute
  '/user/orders/logistics/$id/review/': typeof UserOrdersLogisticsIdReviewIndexRoute
  '/user/orders/product/$slug/review/': typeof UserOrdersProductSlugReviewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/checkout'
    | '/payment'
    | '/product'
    | '/seller'
    | '/store'
    | '/user'
    | '/about'
    | '/cart'
    | '/products'
    | '/auth/login'
    | '/auth/register'
    | '/auth/verify-otp'
    | '/checkout/$orderNumber'
    | '/payment/verify'
    | '/product/$slug'
    | '/seller/analytics'
    | '/seller/finance'
    | '/seller/followers'
    | '/seller/products'
    | '/store/$sellerId'
    | '/user/account'
    | '/user/analytics'
    | '/user/finance'
    | '/user/followers'
    | '/user/help'
    | '/user/notifications'
    | '/user/orders'
    | '/user/recent'
    | '/user/review'
    | '/user/saved'
    | '/product/$slug/reviews'
    | '/seller/products/create'
    | '/store/$sellerId/products'
    | '/user/account/edit'
    | '/user/notifications/$id'
    | '/user/orders/$id'
    | '/seller/products/$slug/analytics'
    | '/seller/products/$slug/edit'
    | '/seller/products/$slug/promote'
    | '/user/orders/logistics/$id/review'
    | '/user/orders/product/$slug/review'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/checkout'
    | '/payment'
    | '/product'
    | '/seller'
    | '/store'
    | '/user'
    | '/about'
    | '/cart'
    | '/products'
    | '/auth/login'
    | '/auth/register'
    | '/auth/verify-otp'
    | '/checkout/$orderNumber'
    | '/payment/verify'
    | '/product/$slug'
    | '/seller/analytics'
    | '/seller/finance'
    | '/seller/followers'
    | '/seller/products'
    | '/store/$sellerId'
    | '/user/account'
    | '/user/analytics'
    | '/user/finance'
    | '/user/followers'
    | '/user/help'
    | '/user/notifications'
    | '/user/orders'
    | '/user/recent'
    | '/user/review'
    | '/user/saved'
    | '/product/$slug/reviews'
    | '/seller/products/create'
    | '/store/$sellerId/products'
    | '/user/account/edit'
    | '/user/notifications/$id'
    | '/user/orders/$id'
    | '/seller/products/$slug/analytics'
    | '/seller/products/$slug/edit'
    | '/seller/products/$slug/promote'
    | '/user/orders/logistics/$id/review'
    | '/user/orders/product/$slug/review'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/checkout'
    | '/payment'
    | '/product'
    | '/seller'
    | '/store'
    | '/user'
    | '/about/'
    | '/cart/'
    | '/products/'
    | '/auth/login/'
    | '/auth/register/'
    | '/auth/verify-otp/'
    | '/checkout/$orderNumber/'
    | '/payment/verify/'
    | '/product/$slug/'
    | '/seller/analytics/'
    | '/seller/finance/'
    | '/seller/followers/'
    | '/seller/products/'
    | '/store/$sellerId/'
    | '/user/account/'
    | '/user/analytics/'
    | '/user/finance/'
    | '/user/followers/'
    | '/user/help/'
    | '/user/notifications/'
    | '/user/orders/'
    | '/user/recent/'
    | '/user/review/'
    | '/user/saved/'
    | '/product/$slug/reviews/'
    | '/seller/products/create/'
    | '/store/$sellerId/products/'
    | '/user/account/edit/'
    | '/user/notifications/$id/'
    | '/user/orders/$id/'
    | '/seller/products/$slug/analytics/'
    | '/seller/products/$slug/edit/'
    | '/seller/products/$slug/promote/'
    | '/user/orders/logistics/$id/review/'
    | '/user/orders/product/$slug/review/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  CheckoutRouteRoute: typeof CheckoutRouteRouteWithChildren
  PaymentRouteRoute: typeof PaymentRouteRouteWithChildren
  ProductRouteRoute: typeof ProductRouteRouteWithChildren
  SellerRouteRoute: typeof SellerRouteRouteWithChildren
  StoreRouteRoute: typeof StoreRouteRouteWithChildren
  UserRouteRoute: typeof UserRouteRouteWithChildren
  AboutIndexRoute: typeof AboutIndexRoute
  CartIndexRoute: typeof CartIndexRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  CheckoutRouteRoute: CheckoutRouteRouteWithChildren,
  PaymentRouteRoute: PaymentRouteRouteWithChildren,
  ProductRouteRoute: ProductRouteRouteWithChildren,
  SellerRouteRoute: SellerRouteRouteWithChildren,
  StoreRouteRoute: StoreRouteRouteWithChildren,
  UserRouteRoute: UserRouteRouteWithChildren,
  AboutIndexRoute: AboutIndexRoute,
  CartIndexRoute: CartIndexRoute,
  ProductsIndexRoute: ProductsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/checkout",
        "/payment",
        "/product",
        "/seller",
        "/store",
        "/user",
        "/about/",
        "/cart/",
        "/products/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/login/",
        "/auth/register/",
        "/auth/verify-otp/"
      ]
    },
    "/checkout": {
      "filePath": "checkout/route.tsx",
      "children": [
        "/checkout/$orderNumber/"
      ]
    },
    "/payment": {
      "filePath": "payment/route.tsx",
      "children": [
        "/payment/verify/"
      ]
    },
    "/product": {
      "filePath": "product/route.tsx",
      "children": [
        "/product/$slug/",
        "/product/$slug/reviews/"
      ]
    },
    "/seller": {
      "filePath": "seller/route.tsx",
      "children": [
        "/seller/analytics/",
        "/seller/finance/",
        "/seller/followers/",
        "/seller/products/",
        "/seller/products/create/",
        "/seller/products/$slug/analytics/",
        "/seller/products/$slug/edit/",
        "/seller/products/$slug/promote/"
      ]
    },
    "/store": {
      "filePath": "store/route.tsx",
      "children": [
        "/store/$sellerId/",
        "/store/$sellerId/products/"
      ]
    },
    "/user": {
      "filePath": "user/route.tsx",
      "children": [
        "/user/account/",
        "/user/analytics/",
        "/user/finance/",
        "/user/followers/",
        "/user/help/",
        "/user/notifications/",
        "/user/orders/",
        "/user/recent/",
        "/user/review/",
        "/user/saved/",
        "/user/account/edit/",
        "/user/notifications/$id/",
        "/user/orders/$id/",
        "/user/orders/logistics/$id/review/",
        "/user/orders/product/$slug/review/"
      ]
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/cart/": {
      "filePath": "cart/index.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx",
      "parent": "/auth"
    },
    "/auth/register/": {
      "filePath": "auth/register/index.tsx",
      "parent": "/auth"
    },
    "/auth/verify-otp/": {
      "filePath": "auth/verify-otp/index.tsx",
      "parent": "/auth"
    },
    "/checkout/$orderNumber/": {
      "filePath": "checkout/$orderNumber/index.tsx",
      "parent": "/checkout"
    },
    "/payment/verify/": {
      "filePath": "payment/verify/index.tsx",
      "parent": "/payment"
    },
    "/product/$slug/": {
      "filePath": "product/$slug/index.tsx",
      "parent": "/product"
    },
    "/seller/analytics/": {
      "filePath": "seller/analytics/index.tsx",
      "parent": "/seller"
    },
    "/seller/finance/": {
      "filePath": "seller/finance/index.tsx",
      "parent": "/seller"
    },
    "/seller/followers/": {
      "filePath": "seller/followers/index.tsx",
      "parent": "/seller"
    },
    "/seller/products/": {
      "filePath": "seller/products/index.tsx",
      "parent": "/seller"
    },
    "/store/$sellerId/": {
      "filePath": "store/$sellerId/index.tsx",
      "parent": "/store"
    },
    "/user/account/": {
      "filePath": "user/account/index.tsx",
      "parent": "/user"
    },
    "/user/analytics/": {
      "filePath": "user/analytics/index.tsx",
      "parent": "/user"
    },
    "/user/finance/": {
      "filePath": "user/finance/index.tsx",
      "parent": "/user"
    },
    "/user/followers/": {
      "filePath": "user/followers/index.tsx",
      "parent": "/user"
    },
    "/user/help/": {
      "filePath": "user/help/index.tsx",
      "parent": "/user"
    },
    "/user/notifications/": {
      "filePath": "user/notifications/index.tsx",
      "parent": "/user"
    },
    "/user/orders/": {
      "filePath": "user/orders/index.tsx",
      "parent": "/user"
    },
    "/user/recent/": {
      "filePath": "user/recent/index.tsx",
      "parent": "/user"
    },
    "/user/review/": {
      "filePath": "user/review/index.tsx",
      "parent": "/user"
    },
    "/user/saved/": {
      "filePath": "user/saved/index.tsx",
      "parent": "/user"
    },
    "/product/$slug/reviews/": {
      "filePath": "product/$slug/reviews/index.tsx",
      "parent": "/product"
    },
    "/seller/products/create/": {
      "filePath": "seller/products/create/index.tsx",
      "parent": "/seller"
    },
    "/store/$sellerId/products/": {
      "filePath": "store/$sellerId/products/index.tsx",
      "parent": "/store"
    },
    "/user/account/edit/": {
      "filePath": "user/account/edit/index.tsx",
      "parent": "/user"
    },
    "/user/notifications/$id/": {
      "filePath": "user/notifications/$id/index.tsx",
      "parent": "/user"
    },
    "/user/orders/$id/": {
      "filePath": "user/orders/$id/index.tsx",
      "parent": "/user"
    },
    "/seller/products/$slug/analytics/": {
      "filePath": "seller/products/$slug/analytics/index.tsx",
      "parent": "/seller"
    },
    "/seller/products/$slug/edit/": {
      "filePath": "seller/products/$slug/edit/index.tsx",
      "parent": "/seller"
    },
    "/seller/products/$slug/promote/": {
      "filePath": "seller/products/$slug/promote/index.tsx",
      "parent": "/seller"
    },
    "/user/orders/logistics/$id/review/": {
      "filePath": "user/orders/logistics/$id/review/index.tsx",
      "parent": "/user"
    },
    "/user/orders/product/$slug/review/": {
      "filePath": "user/orders/product/$slug/review/index.tsx",
      "parent": "/user"
    }
  }
}
ROUTE_MANIFEST_END */
